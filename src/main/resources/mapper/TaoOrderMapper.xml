<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.transample.demo.mapper.TaoOrderDao">
  <resultMap id="BaseResultMap" type="com.transample.demo.domain.TaoOrder">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="villager_id" jdbcType="INTEGER" property="villagerId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="seller_name" jdbcType="VARCHAR" property="sellerName" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="station_id" jdbcType="INTEGER" property="stationId" />
    <result column="station_name" jdbcType="VARCHAR" property="stationName" />
    <result column="total_number" jdbcType="INTEGER" property="totalNumber" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="logistics_one_price" jdbcType="DECIMAL" property="logisticsOnePrice" />
    <result column="logistics_two_price" jdbcType="DECIMAL" property="logisticsTwoPrice" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="send_time" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="arrive_time" jdbcType="TIMESTAMP" property="arriveTime" />
    <result column="shou_time" jdbcType="TIMESTAMP" property="shouTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, villager_id, user_name, seller_id, seller_name, mobile, address, station_id, 
    station_name, total_number, total_price, logistics_one_price, logistics_two_price, 
    `status`, remark, create_time, send_time, arrive_time, shou_time, finish_time
  </sql>
  <select id="selectByExample" parameterType="com.transample.demo.domain.TaoOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tao_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tao_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tao_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.transample.demo.domain.TaoOrderExample">
    delete from tao_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="order_id" keyProperty="orderId" parameterType="com.transample.demo.domain.TaoOrder" useGeneratedKeys="true">
    insert into tao_order (villager_id, user_name, seller_id, 
      seller_name, mobile, address, 
      station_id, station_name, total_number, 
      total_price, logistics_one_price, logistics_two_price, 
      `status`, remark, create_time, 
      send_time, arrive_time, shou_time, 
      finish_time)
    values (#{villagerId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{sellerId,jdbcType=INTEGER}, 
      #{sellerName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{stationId,jdbcType=INTEGER}, #{stationName,jdbcType=VARCHAR}, #{totalNumber,jdbcType=INTEGER}, 
      #{totalPrice,jdbcType=DECIMAL}, #{logisticsOnePrice,jdbcType=DECIMAL}, #{logisticsTwoPrice,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{arriveTime,jdbcType=TIMESTAMP}, #{shouTime,jdbcType=TIMESTAMP}, 
      #{finishTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="order_id" keyProperty="orderId" parameterType="com.transample.demo.domain.TaoOrder" useGeneratedKeys="true">
    insert into tao_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="villagerId != null">
        villager_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="sellerName != null">
        seller_name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="stationId != null">
        station_id,
      </if>
      <if test="stationName != null">
        station_name,
      </if>
      <if test="totalNumber != null">
        total_number,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="logisticsOnePrice != null">
        logistics_one_price,
      </if>
      <if test="logisticsTwoPrice != null">
        logistics_two_price,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="arriveTime != null">
        arrive_time,
      </if>
      <if test="shouTime != null">
        shou_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="villagerId != null">
        #{villagerId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="sellerName != null">
        #{sellerName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        #{stationId,jdbcType=INTEGER},
      </if>
      <if test="stationName != null">
        #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="totalNumber != null">
        #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="logisticsOnePrice != null">
        #{logisticsOnePrice,jdbcType=DECIMAL},
      </if>
      <if test="logisticsTwoPrice != null">
        #{logisticsTwoPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arriveTime != null">
        #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shouTime != null">
        #{shouTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.transample.demo.domain.TaoOrderExample" resultType="java.lang.Long">
    select count(*) from tao_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tao_order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.villagerId != null">
        villager_id = #{record.villagerId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.sellerName != null">
        seller_name = #{record.sellerName,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.stationId != null">
        station_id = #{record.stationId,jdbcType=INTEGER},
      </if>
      <if test="record.stationName != null">
        station_name = #{record.stationName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNumber != null">
        total_number = #{record.totalNumber,jdbcType=INTEGER},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.logisticsOnePrice != null">
        logistics_one_price = #{record.logisticsOnePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.logisticsTwoPrice != null">
        logistics_two_price = #{record.logisticsTwoPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sendTime != null">
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.arriveTime != null">
        arrive_time = #{record.arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shouTime != null">
        shou_time = #{record.shouTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tao_order
    set order_id = #{record.orderId,jdbcType=INTEGER},
      villager_id = #{record.villagerId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      seller_name = #{record.sellerName,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      station_id = #{record.stationId,jdbcType=INTEGER},
      station_name = #{record.stationName,jdbcType=VARCHAR},
      total_number = #{record.totalNumber,jdbcType=INTEGER},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      logistics_one_price = #{record.logisticsOnePrice,jdbcType=DECIMAL},
      logistics_two_price = #{record.logisticsTwoPrice,jdbcType=DECIMAL},
      `status` = #{record.status,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      arrive_time = #{record.arriveTime,jdbcType=TIMESTAMP},
      shou_time = #{record.shouTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.transample.demo.domain.TaoOrder">
    update tao_order
    <set>
      <if test="villagerId != null">
        villager_id = #{villagerId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="sellerName != null">
        seller_name = #{sellerName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=INTEGER},
      </if>
      <if test="stationName != null">
        station_name = #{stationName,jdbcType=VARCHAR},
      </if>
      <if test="totalNumber != null">
        total_number = #{totalNumber,jdbcType=INTEGER},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="logisticsOnePrice != null">
        logistics_one_price = #{logisticsOnePrice,jdbcType=DECIMAL},
      </if>
      <if test="logisticsTwoPrice != null">
        logistics_two_price = #{logisticsTwoPrice,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arriveTime != null">
        arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="shouTime != null">
        shou_time = #{shouTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.transample.demo.domain.TaoOrder">
    update tao_order
    set villager_id = #{villagerId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      seller_id = #{sellerId,jdbcType=INTEGER},
      seller_name = #{sellerName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      station_id = #{stationId,jdbcType=INTEGER},
      station_name = #{stationName,jdbcType=VARCHAR},
      total_number = #{totalNumber,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      logistics_one_price = #{logisticsOnePrice,jdbcType=DECIMAL},
      logistics_two_price = #{logisticsTwoPrice,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      arrive_time = #{arriveTime,jdbcType=TIMESTAMP},
      shou_time = #{shouTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>